# Use official composer library to move the composer binary to the PHP container
FROM php:8.4-apache
LABEL maintainer="hariskhurshid@mcpinsight.com"

RUN apt-get update

RUN apt-get install -y libpq-dev libpng-dev curl nano unzip zip git jq supervisor

RUN apt-get -y update && apt-get -y install build-essential autoconf libcurl4-openssl-dev --no-install-recommends

# Install the PHP extension installer that will install and configure the extension, but will also install all dependencies.
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
# Install the ZIP extension since Composer requires it
RUN chmod uga+x /usr/local/bin/install-php-extensions && sync && \
    install-php-extensions zip && \
    install-php-extensions gd && \
    install-php-extensions intl && \
    curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php && \
    php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer && \
    a2enmod headers rewrite

RUN apt-get -y update && apt-get -y install build-essential autoconf libcurl4-openssl-dev --no-install-recommends

#RUN mkdir -p /home/apm-agent  && \
#    cd /home/apm-agent  && \
#    git clone https://github.com/elastic/apm-agent-php.git apm  && \
#    cd apm/agent/native/ext  && \
#   /usr/bin/phpize && ./configure --enable-elastic_apm && \    make clean && make && make install
#COPY ./elastic_apm.ini /usr/local/etc/php/conf.d/elastic_apm.ini

# Set composer home directory
ENV COMPOSER_HOME=/.composer COMPOSER_ALLOW_SUPERUSER=1 APACHE_DOCUMENT_ROOT=/var/www/portal
# Fix vHosts
RUN sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}/public!g' /etc/apache2/sites-available/*.conf && \
    sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}/public!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf && \
    mkdir -p ${APACHE_DOCUMENT_ROOT} /.composer && chown -R www-data:www-data ${APACHE_DOCUMENT_ROOT}

# Set the working directory
WORKDIR ${APACHE_DOCUMENT_ROOT}
# Copy the application files
COPY --chown=www-data . ${APACHE_DOCUMENT_ROOT}
# Install the composer dependencies
#RUN --mount=type=cache,target=/.composer/cache composer install --no-autoloader --no-scripts --working-dir=${APACHE_DOCUMENT_ROOT}
RUN composer install --no-autoloader --no-scripts --working-dir=${APACHE_DOCUMENT_ROOT}
# Dump the autoload files
RUN composer dump-autoload --optimize --working-dir=${APACHE_DOCUMENT_ROOT}
# Set the permissions
RUN chown -R www-data:www-data ${APACHE_DOCUMENT_ROOT}
RUN chmod -R 777 ${APACHE_DOCUMENT_ROOT}/public
RUN chmod -R 777 ${APACHE_DOCUMENT_ROOT}/writable
RUN mv ${APACHE_DOCUMENT_ROOT}/.env.production ${APACHE_DOCUMENT_ROOT}/.env
